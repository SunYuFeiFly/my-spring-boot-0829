# 基本语法
# k:(空格)v：表示一对键值对（空格必须有）； 以空格的缩进来控制层级关系；只要是左对齐的一列数据，都是同一个层级的；属性和值也是大小写敏感；
# 端口号
server:
  port: 8081
  path: /hello

# 2、值的写法 字面量：普通的值（数字，字符串，布尔）；k: v：字面直接来写，字符串默认不用加上单引号或者双引号；
# ""：双引号；不会转义字符串里面的特殊字符；特殊字符会作为本身想表示的意思
# 输出；zhangsan 换行 lisi
name: "zhangsan \n lisi"
# ''：单引号；会转义特殊字符，特殊字符最终只是一个普通的字符串数据
# 输出；bajie \n yiliujie
home: ‘bajie \n yiliujie’

# 对象、Map（属性和值）（键值对） k: v：在下一行来写对象的属性和值的关系；注意缩进 对象还是k: v的方式
friends:
  lastName: zhangsan
  age: 20
# 行内写法：
otherFriends: {lastName: zhangsan,age: 18}

# 数组（List、Set）： 用- 值表示数组中的一个元素
pets:
  ‐ cat
  ‐ dog
  ‐ pig
# 行内写法
otherpets: [cat, dog, pig]

# 整体示例
person:
  lastName: hello
    age: 18
    boss: false
    birth: 2017/12/12
    maps: {k1: v1,k2: 12}
    lists:
      ‐ lisi
      ‐ zhaoliu
    dog:
      name: 小狗
      age: 12