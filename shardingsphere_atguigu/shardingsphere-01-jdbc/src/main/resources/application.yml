# 水平分库，不垂直分库
spring:
  # 一个实体类对应两张表，覆盖
  main:
    allow-bean-definition-overriding: true
  # 配置数据源具体内容，包含连接池，驱动，地址，用户名和密码
  shardingsphere:
    # 打开sql输出日志
    props:
      sql:
        show: true
    sharding:
      tables:
        course:
          # 指定course表分布情况，配置表在哪个数据库里面，表名称都是什么  m1.course_1 , m1.course_2
          actual-data-nodes: m1.course_$->{1..2}
          key-generator:
            # 指定course表里面主键cid
            column: cid
            # 指定course表生成策略 SNOWFLAKE
            type: SNOWFLAKE
          table-strategy:
            inline:
              # 指定分片策略  约定cid值偶数添加到course_1表，如果cid是奇数添加到course_2表
              sharding-column: cid
              algorithm-expression: course_$->{cid % 2 + 1}
    # 配置数据源具体内容，包含连接池，驱动，地址，用户名和密码
    datasource:
      names: m1
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/course_db?serverTimezone=GMT%2B8
        username: root
        password: root

# 端口
server:
  port: 8888

mybatis-plus:
  mapperLocations: classpath:mapper/*.xml
  type-aliases-package: com.atguigu.shardingsphere.entity
  configuration:
    map-underscore-to-camel-case: false